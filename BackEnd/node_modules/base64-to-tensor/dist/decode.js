"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.convertBuffer = void 0;
var tfjs_core_1 = require("@tensorflow/tfjs-core");
/**
 * Convert the jpeg buffer to tensor with offset
 *
 * @param data the data array.
 * @param shape a number array with the shape of [height, width, channels].
 * @returns tf.Tensor3D
 */
var convertBuffer = function (data, shape) {
    var height = shape[0], width = shape[1], channels = shape[2];
    var buffer = new Uint8Array(width * height * 3);
    var offset = 0;
    for (var i = 0; i < buffer.length; i += 3) {
        buffer[i] = data[offset];
        buffer[i + 1] = data[offset + 1];
        buffer[i + 2] = data[offset + 2];
        offset += 4;
    }
    return (0, tfjs_core_1.tensor3d)(buffer, [height, width, channels]);
};
exports.convertBuffer = convertBuffer;
//# sourceMappingURL=decode.js.map